Traceback (most recent call last):
  File "/home/gslee/anaconda3/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/gslee/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/gslee/anaconda3/lib/python3.9/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/gslee/anaconda3/lib/python3.9/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/home/gslee/anaconda3/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/home/gslee/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/home/gslee/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/gslee/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
num_samples_per_class = 1000

# ÏùåÏÑ± Îç∞Ïù¥ÌÑ∞ÏÖã
negative_samples = np.random.multivariate_normal(
    mean=[0, 3], cov=[[1, 0.5],[0.5, 1]], size=num_samples_per_class)

# ÏñëÏÑ± Îç∞Ïù¥ÌÑ∞ÏÖã
positive_samples = np.random.multivariate_normal(
    mean=[3, 0], cov=[[1, 0.5],[0.5, 1]], size=num_samples_per_class)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
[0;32m/tmp/ipykernel_207/1293141962.py[0m in [0;36m<module>[0;34m[0m
[1;32m      2[0m [0;34m[0m[0m
[1;32m      3[0m [0;31m# ÏùåÏÑ± Îç∞Ïù¥ÌÑ∞ÏÖã[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 4[0;31m negative_samples = np.random.multivariate_normal(
[0m[1;32m      5[0m     mean=[0, 3], cov=[[1, 0.5],[0.5, 1]], size=num_samples_per_class)
[1;32m      6[0m [0;34m[0m[0m

[0;31mNameError[0m: name 'np' is not defined
NameError: name 'np' is not defined

